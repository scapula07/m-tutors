mor

https://ipfs.infura.io:5001/QmcRGAKbTh65CY1sKN4DB2DE2UdQHWn3CSxCsdwPA9jSyy
  const userAuth=async()=>{
      
        
        
       let account 
         try{
          const accounts = await window.ethereum.request({method: 'eth_requestAccounts'  })
            console.log(accounts)
            account =accounts[0]
            window.localStorage.setItem("currentAccount",account)
            window.localStorage.setItem("email",email)
          //  setCurrentUser({
            //  account:account
          //  })
          /** const userRef = collection(db, "users");
            const usersQuery = query(userRef, where("addresses", "array-contains", account));
            const userDocSnapshot =await getDocs(usersQuery)
            console.log(userDocSnapshot,userDocSnapshot.empty,"a efbvafbe")
            if(userDocSnapshot.docs.length >2){
               console.log(userDocSnapshot.docs.length + "first")
               userDocSnapshot.docs.map((doc)=>{
                 console.log(doc.data())
                 setCurrentUser(doc.data())})
               console.log(currentUser)
            }else if(userDocSnapshot.docs.length===1){
             // console.log(userDocSnapshot.empty)
              const userRef = collection(db,"users");

              const usersQuery = query(userRef, where("email", "==", email));
              const userDocSnapshot =await getDocs(usersQuery)
             // userDocSnapshot.docs.map((doc)=>console.log(doc.data() ))
              
              if(userDocSnapshot.docs.length >=2){
                userDocSnapshot.docs.map((doc)=>{
                  console.log(doc.data() +"first")
                  setCurrentUser(doc.data())})
                
                  console.log(currentUser+"email")
              }else{
                const payload={
                  addresses :[account],
                  email:email,
                  
                }
                const docRef = await addDoc(collection(db, "users"),payload);
                console.log(docRef.id)
                const docSnap = await getDoc(docRef);
                console.log(docSnap.data() + "third")
                setCurrentUser(docSnap.data())
                 console.log(currentUser+"created")
              } 
            }   **/
          
           }catch(error){
          if (error.code === 4001) {
            // EIP-1193 userRejectedRequest error
            // If this happens, the user rejected the connection request.
            console.log('Please connect to MetaMask.');
          } else {
            console.error(error);
         }
         }
     }

     {`/user/${currentUser.id}`}

                   <Link to="/channel/dbhebaera">video</Link>
                 <Link to={`/user/${currentUser.id}`}>profile</Link>
              
                 <Link to="/tutors">tutors</Link>

                   currentUser.email? <Outlet/> :<Navigate to="/" state={{from:location}} replace/>


                   {error&& <Card>{error}</Card>}
                   <Card>
                      <input placeholder="Enter email address"  name="email" value={email} onChange={(e)=>setEmail(e.target.value)}/>
                       {window.ethereum&& <button className="bg-red-400" onClick={userAuth}>Connect with Metamask</button>}
                       {!window.ethereum&& <button className="bg-green-400 ">connect with Metamask</button>}
                       <Link to="/watch">watch</Link>
                       <Link to="/tutors">tutors</Link>
                       <Link to={`/channel/${currentUser.id}`}>channel</Link>
                   </Card>
                   <span>index</span>